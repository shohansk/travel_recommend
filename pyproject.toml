[project]
name = "travel_recommend"
dynamic = ["version"]
requires-python = ">=3.10"
description = "Travel Recommendation System to find cool destinations."
readme = {file = "README.md", content-type = "text/markdown"}
classifiers = [
    "Programming Language :: Python",
    "Framework :: Django",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
license = "MIT"

dependencies = [
    "pandas==2.2.3",
    "retry-requests==2.0.0",
    "Django>=5.0.4,<5.1.0",
    "requests-cache==1.2.1",
    "dynaconf>=3.2.5,<3.3.0",
    "requests>=2.32.3,<2.33.0",
    "openmeteo-requests==1.3.0",
    "psycopg2-binary>=2.9.9,<3.0.0",
    "djangorestframework>=3.15.1,<3.16.0",

    # lint
    "ruff>=0.4.3",

    # test
    "pytest-cov>=5.0.0,<5.1.0",
    "pytest-django>=4.8.0,<4.9.0",

    # docs
    "drf-yasg>=1.21.7,<1.22.0"
]

[tool.ruff]
extend-exclude = [
    "migrations",
    "__pycache__"
]

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "core.settings"
python_files = ["test_*.py"]

[tool.coverage.run]
omit = [
    "*/migrations/*",
    "*/commands/*",
    "*/apps.py",
    "*/urls.py",
    "*/__init__.py",
    "tests/*",
    "core/settings.py",
    "*/swagger_responses.py"
]

[tool.coverage.report]
exclude_also = [
    "Exception"
]